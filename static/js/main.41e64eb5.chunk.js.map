{"version":3,"sources":["utils/canvas.js","utils/index.js","animations/windsheild.js","animations/index.js","components/Prototype.js","hooks/index.js","App.js","index.js"],"names":["getCanvasDimensions","context","canvas","getBoundingClientRect","width","height","OFFSET","Math","PI","angleBetween","p1","p2","atan2","y","x","distance","sqrt","pointOnLine","howFar","sign","p3","radians","degrees","windshield","strands","centerCoords","getCenterCoords","u","clearRect","angleOf","p","a","angleToRadius","d3","domain","range","clamp","strandAngles","reduce","acc","strand","strandIndex","angles","map","led","max","min","angleDegrees","window","requestAnimationFrame","_windshield","angle","Object","keys","filter","v","ANGLE_THRESHOLD","forEach","radius","abs","showStrands","incAngle","showLEDs","leds","draw","flatMap","WIDTH","RADIUS_X","BACKGROUND_COLOR","Canvas","styled","Container","div","leftHemisphere","rightHemisphere","Ellipse","rx","startAngle","endAngle","_ellipse","ry","rotation","freeze","strokeColor","fillColor","beginPath","ellipse","strokeStyle","stroke","fillStyle","fill","pad","LED","config","defaults","color","_led","r","resetColor","resetRadius","arc","Sail","numStrands","ellipses","i","incAmount","pInc","newRx","_sail","e1","e2","e3","setNumStrands","getLEDs","e","angleStep","angleRadians","cos","sin","pt","v1","v2","v3","d1","d2","isPointInsideTriangle","every","point","b","x0","y0","alpha","xp","yp","pow","isPointInsideEllipse","isEqual","reverse","ledStrand","length","moveTo","lineTo","STRANDS","s","sail","sailStrand","Prototype","canvasRef","useRef","useState","setContext","useEffect","node","current","getContext","useCanvas","animations","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41e64eb5.chunk.js","sourcesContent":["export const drawDot = (context, p, radius = 2) => {\n  context.beginPath();\n  context.arc(p.x, p.y, radius, 0, 2 * Math.PI);\n  context.fillStyle = 'white';\n  context.fill();\n};\n\nexport const drawLine = (context, p1, p2) => {\n  context.beginPath();\n  context.moveTo(p1.x, p1.y);\n  context.lineTo(p2.x, p2.y);\n  context.strokeStyle = 'white';\n  context.stroke();\n};\n\nexport const getCanvasDimensions = context => {\n  if (context) {\n    const { width, height } = context.canvas.getBoundingClientRect();\n    return { width, height };\n  }\n};\n","const OFFSET = Math.PI / 2;\n\nexport const angleBetween = (p1, p2) =>\n  Math.atan2(p2.y - p1.y, p2.x - p1.x) - OFFSET;\n\nexport const degrees = radians => (180 * (radians + OFFSET)) / Math.PI;\n\nexport const distance = (p1, p2) =>\n  Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y));\n\nexport const last = (arr = []) => arr[arr.length - 1];\n\nexport const pointOnCircumference = (radius, origin, d) => {\n  const degrees = d - 90 < 0 ? d + 270 : d - 90;\n  const radians = (degrees * Math.PI) / 180;\n  return {\n    x: origin.x + radius * Math.cos(radians),\n    y: origin.y + radius * Math.sin(radians)\n  };\n};\n\n// get a point along the line that forms between p1 and p2\n// howFar value between 0 and 1, how far along that line\nexport const pointOnLine = (p1, p2, howFar) => ({\n  x: p1.x + (p2.x - p1.x) * howFar,\n  y: p1.y + (p2.y - p1.y) * howFar\n});\n\nexport const pointOnEllipse = (ellipse, angleRadians) => ({\n  x:\n    ellipse.x +\n    ellipse.rx * Math.cos(angleRadians) * Math.cos(ellipse.rotation) -\n    ellipse.ry * Math.sin(angleRadians) * Math.sin(ellipse.rotation),\n  y:\n    ellipse.y +\n    ellipse.rx * Math.cos(angleRadians) * Math.sin(ellipse.rotation) +\n    ellipse.ry * Math.sin(angleRadians) * Math.cos(ellipse.rotation)\n});\n\nexport const isPointInsideEllipse = (ellipse, point) => {\n  const { rx: a, ry: b, x: x0, y: y0, rotation: alpha } = ellipse;\n  const { x: xp, y: yp } = point;\n  return (\n    Math.pow(Math.cos(alpha) * (xp - x0) + Math.sin(alpha) * (yp - y0), 2) /\n      (a * a) +\n      Math.pow(Math.sin(alpha) * (xp - x0) - Math.cos(alpha) * (yp - y0), 2) /\n        (b * b) <=\n    1\n  );\n};\n\nconst sign = (p1, p2, p3) =>\n  (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n\nexport const isPointInsideTriangle = (pt, v1, v2, v3) => {\n  const d1 = sign(pt, v1, v2);\n  const d2 = sign(pt, v2, v3);\n  const d3 = sign(pt, v3, v1);\n\n  const has_neg = d1 < 0 || d2 < 0 || d3 < 0;\n  const has_pos = d1 > 0 || d2 > 0 || d3 > 0;\n\n  return !(has_neg && has_pos);\n};\n\nexport const radians = degrees => (degrees * Math.PI) / 180 - OFFSET;\n\nexport * from './canvas';\n","import * as d3 from 'd3';\n\nimport * as u from 'utils';\nimport { getCenterCoords, showStrands } from 'animations';\n\nexport const windshield = (context, strands) => {\n  const centerCoords = getCenterCoords(context, strands);\n  const { width, height } = u.getCanvasDimensions(context);\n  context.clearRect(0, 0, width, height);\n\n  const START_ANGLE = 225;\n  const END_ANGLE = 135;\n  const ANGLE_THRESHOLD = 10;\n  const incAngle = angle =>\n    angle === 360 ? 0 : angle === END_ANGLE ? START_ANGLE : angle + 1;\n  const angleOf = p => {\n    const a = u.degrees(u.angleBetween(centerCoords, p)) + 90;\n    return a < 0 ? a + 360 : a > 360 ? a - 360 : a;\n  };\n  const angleToRadius = d3\n    .scaleLinear()\n    .domain([-ANGLE_THRESHOLD, 0, ANGLE_THRESHOLD])\n    .range([1, 5, 1])\n    .clamp(true);\n  const strandAngles = strands.reduce((acc, strand, strandIndex) => {\n    const angles = strand.map(led => angleOf(led));\n    const max = Math.max(...angles);\n    const min = Math.min(...angles);\n    acc[strandIndex] = min + (max - min) / 2;\n    return acc;\n  }, {});\n  const isBetween = (v, min, max) => v >= min && v <= max;\n  const getRelevantStrands = angle =>\n    Object.keys(strandAngles).filter(strandIndex =>\n      isBetween(\n        strandAngles[strandIndex],\n        angle - ANGLE_THRESHOLD * 2,\n        angle + ANGLE_THRESHOLD * 2\n      )\n    );\n\n  let angleDegrees = START_ANGLE;\n\n  const _windshield = () => {\n    getRelevantStrands(angleDegrees).forEach(strandIndex => {\n      strands[strandIndex] = strands[strandIndex].map(led =>\n        led.radius(angleToRadius(Math.abs(angleDegrees - angleOf(led))))\n      );\n    });\n\n    showStrands(context, strands);\n\n    /*\n    // For debugging. Draws the current angle.\n    u.drawLine(\n      context,\n      centerCoords,\n      u.pointOnCircumference(width * 0.75, centerCoords, angleDegrees)\n    );\n    */\n\n    angleDegrees = incAngle(angleDegrees);\n    window.requestAnimationFrame(_windshield);\n  };\n\n  window.requestAnimationFrame(_windshield);\n};\n\n// An alternative way to get the \"windshield wiper\" effect.\n// Not nearly as cool. Might be useful for testing strands\nexport const windshield2 = (context, strands) => {\n  const { width, height } = u.getCanvasDimensions(context);\n  context.clearRect(0, 0, width, height);\n\n  const DIST_THRESHOLD = 20;\n  const distToRadius = d3\n    .scaleLinear()\n    .domain([-DIST_THRESHOLD, 0, DIST_THRESHOLD])\n    .range([1, 5, 1]);\n  const distRange = d3.range(-DIST_THRESHOLD, DIST_THRESHOLD);\n  const incIndex = (i, arr) => (i === arr.length - 1 ? 0 : i + 1);\n\n  let distIndex = 0;\n  let strandIndex = 0;\n\n  const _windshield = () => {\n    strands[strandIndex] = strands[strandIndex].map(led =>\n      led.radius(distToRadius(distRange[distIndex]))\n    );\n\n    showStrands(context, strands);\n\n    strandIndex =\n      distIndex === distRange.length - 1\n        ? incIndex(strandIndex, strands)\n        : strandIndex;\n    distIndex = incIndex(distIndex, distRange);\n    window.requestAnimationFrame(_windshield);\n  };\n\n  window.requestAnimationFrame(_windshield);\n};\n","import { getCanvasDimensions } from 'utils';\n\nexport const getCenterCoords = (context, strands) => {\n  const { width } = getCanvasDimensions(context);\n  return {\n    x: width / 2,\n    y: strands[0][0].y\n  };\n};\n\nexport const showLEDs = (context, leds) => {\n  const { width, height } = getCanvasDimensions(context);\n  context.clearRect(0, 0, width, height);\n  leds.forEach(led => led.draw(context));\n};\n\nexport const showStrands = (context, strands) => {\n  const { width, height } = getCanvasDimensions(context);\n  context.clearRect(0, 0, width, height);\n  showLEDs(\n    context,\n    strands.flatMap(strand => strand)\n  );\n};\n\nexport * from './fan';\nexport * from './ripple';\nexport * from './windsheild';\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { isEqual, reverse } from 'lodash';\n\nimport * as animations from 'animations';\nimport { useCanvas } from 'hooks';\nimport {\n  angleBetween,\n  distance,\n  isPointInsideEllipse,\n  isPointInsideTriangle,\n  pointOnEllipse,\n  pointOnLine,\n  radians\n} from 'utils';\n\nwindow.d3 = d3;\n\nconst WIDTH = 1100;\nconst HEIGHT = 900;\nconst RADIUS_X = 100;\nconst SAIL_COLOR = '#455B68';\nconst BACKGROUND_COLOR = 'black';\nconst LED_COLOR = 'white';\nconst LED_DENSITY = 165;\nconst NUM_STRANDS = 7;\n\nconst Canvas = styled.canvas`\n  background-color: ${BACKGROUND_COLOR};\n`;\nconst Container = styled.div`\n  background-color: ${BACKGROUND_COLOR};\n  height: 100%;\n  text-align: center;\n`;\n\nconst leftHemisphere = [radians(180), radians(360)];\nconst rightHemisphere = [radians(0), radians(180)];\nconst Ellipse = (\n  p1,\n  p2,\n  rx = RADIUS_X,\n  startAngle = radians(0),\n  endAngle = radians(360)\n) => {\n  const _ellipse = {\n    x: pointOnLine(p1, p2, 0.5).x,\n    y: pointOnLine(p1, p2, 0.5).y,\n    rx,\n    ry: distance(p1, p2) / 2,\n    rotation: angleBetween(p1, p2),\n    startAngle,\n    endAngle\n  };\n  return Object.freeze({\n    ..._ellipse,\n    draw: (context, strokeColor = 'black', fillColor) => {\n      const { x, y, rx, ry, rotation, startAngle, endAngle } = _ellipse;\n      context.beginPath();\n      context.ellipse(x, y, rx, ry, rotation, startAngle, endAngle);\n      context.strokeStyle = strokeColor;\n      context.stroke();\n      if (fillColor) {\n        context.fillStyle = fillColor;\n        context.fill();\n      }\n    },\n    pad: () => Ellipse(p1, p2, rx - 1, startAngle, endAngle)\n  });\n};\n\nconst LED = config => {\n  const defaults = {\n    color: LED_COLOR,\n    endAngle: 2 * Math.PI,\n    radius: 1,\n    startAngle: 0\n  };\n  const _led = { ...defaults, ...config };\n  return Object.freeze({\n    ..._led,\n    color: color => LED({ ..._led, color }),\n    r: _led.radius,\n    radius: radius => LED({ ..._led, radius }),\n    resetColor: () => LED({ ..._led, color: defaults.color }),\n    resetRadius: () => LED({ ..._led, radius: defaults.radius }),\n    draw: context => {\n      const { x, y, color, radius, startAngle, endAngle } = _led;\n      context.beginPath();\n      context.arc(x, y, radius, startAngle, endAngle);\n      context.fillStyle = color;\n      context.fill();\n    }\n  });\n};\n\nconst Sail = config => {\n  const { p1, p2, p3, rx, numStrands } = config;\n  const ellipses = d3.range(0, numStrands).map(i => {\n    const incAmount = rx / (numStrands - 1);\n    const pInc = pointOnLine(p3, p1, i / (numStrands - 1));\n    const newRx = rx - i * incAmount * 2;\n    const [startAngle, endAngle] =\n      newRx >= 0 ? rightHemisphere : leftHemisphere;\n    return Ellipse(pInc, p2, Math.abs(newRx), startAngle, endAngle);\n  });\n  const _sail = {\n    ...config,\n    e1: Ellipse(p1, p2, rx, radians(240), radians(360)),\n    e2: Ellipse(p2, p3, rx, radians(180), radians(300)),\n    e3: Ellipse(p3, p1, rx, radians(180), radians(360)),\n    ellipses\n  };\n  return Object.freeze({\n    ..._sail,\n    setNumStrands: numStrands => Sail({ ..._sail, numStrands }),\n    getLEDs: () =>\n      ellipses\n        .map(e => {\n          const angleStep = (e.endAngle - e.startAngle) / LED_DENSITY;\n          const leds = d3\n            .range(e.startAngle, e.endAngle, angleStep)\n            .map(angle => LED(pointOnEllipse(e, angle)))\n            .filter(\n              led =>\n                isPointInsideTriangle(led, p1, p2, p3) &&\n                [_sail.e1.pad(), _sail.e2.pad(), _sail.e3].every(\n                  e => !isPointInsideEllipse(e, led)\n                )\n            );\n          return isEqual([e.startAngle, e.endAngle], rightHemisphere)\n            ? reverse(leds)\n            : leds;\n        })\n        .filter(ledStrand => ledStrand.length > 0),\n    draw: context => {\n      context.beginPath();\n      context.moveTo(p1.x, p1.y);\n      context.lineTo(WIDTH / 2, WIDTH / 2);\n      context.lineTo(p3.x, p3.y);\n      context.fillStyle = SAIL_COLOR;\n      context.fill();\n      [_sail.e1, _sail.e2, _sail.e3].forEach(e => {\n        e.draw(context, BACKGROUND_COLOR, BACKGROUND_COLOR);\n      });\n    }\n  });\n};\n\nconst SAILS = [\n  {\n    p1: { x: -60, y: 300 },\n    p2: { x: 880, y: 550 },\n    p3: { x: -60, y: 800 },\n    rx: RADIUS_X\n  },\n  {\n    p1: { x: 300, y: -100 },\n    p2: { x: 750, y: 750 },\n    p3: { x: -100, y: 300 },\n    rx: RADIUS_X\n  },\n  {\n    p1: { x: WIDTH + 100, y: 300 },\n    p2: { x: WIDTH - 750, y: 750 },\n    p3: { x: WIDTH - 300, y: -100 },\n    rx: RADIUS_X\n  },\n  {\n    p1: { x: WIDTH + 60, y: 800 },\n    p2: { x: WIDTH - 880, y: 550 },\n    p3: { x: WIDTH + 60, y: 300 },\n    rx: RADIUS_X\n  }\n].map(s => Sail(s).setNumStrands(NUM_STRANDS));\n\nconst SAIL_STRANDS = SAILS.map(sail => sail.getLEDs().map(leds => leds));\nconst STRANDS = SAIL_STRANDS.flatMap(sailStrand => sailStrand);\n\nconst Prototype = () => {\n  const [canvasRef, context] = useCanvas();\n\n  useEffect(() => {\n    if (context) {\n      // This colors in the background of the sail. Ignore for now\n      //SAILS.forEach(sail => sail.draw(context));\n\n      // Animation\n      animations.windshield(context, STRANDS);\n\n      // No animation\n      //animations.showStrands(context, STRANDS);\n    }\n  }, [context]);\n\n  return (\n    <Container>\n      <Canvas ref={canvasRef} width={WIDTH} height={HEIGHT} />\n    </Container>\n  );\n};\n\nexport default Prototype;\n","import { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { debounce } from 'lodash';\n\nexport const useWindowSize = (defaultSize = [0, 0]) => {\n  const [size, setSize] = useState(defaultSize);\n\n  useLayoutEffect(() => {\n    const updateSize = () => setSize([window.innerWidth, window.innerHeight]);\n    window.addEventListener('resize', debounce(updateSize, 300));\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  return size;\n};\n\nexport const useCanvas = () => {\n  const canvasRef = useRef(null);\n  const [context, setContext] = useState();\n\n  useEffect(() => {\n    const node = canvasRef.current;\n    if (node) {\n      setContext(node.getContext('2d'));\n    }\n  }, [canvasRef]);\n\n  return [canvasRef, context];\n};\n","import Prototype from 'components/Prototype';\n\nconst App = () => <Prototype />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["utils/index.js","animations/ripple.js","animations/index.js","components/Prototype.js","hooks/index.js","App.js","index.js"],"names":["OFFSET","Math","PI","angleBetween","p1","p2","atan2","y","x","distance","sqrt","pointOnLine","howFar","sign","p3","radians","degrees","getCanvasDimensions","context","canvas","getBoundingClientRect","width","height","ripple","strands","X","Y","RIPPLE_WIDTH","LED_COLOR","RIPPLE_COLOR","increaseRadius","d3","domain","range","decreaseRadius","increaseColor","decreaseColor","prominence","led","radius","leds","flatMap","strand","window","requestAnimationFrame","_ripple","map","d","inRippleRange","color","getColor","getRadius","showLEDs","clearRect","forEach","draw","WIDTH","RADIUS_X","BACKGROUND_COLOR","Canvas","styled","leftHemisphere","rightHemisphere","Ellipse","rx","startAngle","endAngle","_ellipse","ry","rotation","Object","freeze","strokeColor","fillColor","beginPath","ellipse","strokeStyle","stroke","fillStyle","fill","pad","LED","config","defaults","_led","r","resetColor","resetRadius","arc","Sail","numStrands","ellipses","i","incAmount","pInc","newRx","abs","_sail","e1","e2","e3","setNumStrands","getLEDs","e","angleStep","angle","angleRadians","cos","sin","filter","pt","v1","v2","v3","d1","d2","isPointInsideTriangle","every","point","a","b","x0","y0","alpha","xp","yp","pow","isPointInsideEllipse","isEqual","reverse","ledStrand","length","moveTo","lineTo","STRANDS","s","sail","sailStrand","Prototype","canvasRef","useRef","useState","setContext","useEffect","node","current","getContext","useCanvas","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.177816d2.chunk.js","sourcesContent":["const OFFSET = Math.PI / 2;\n\nexport const angleBetween = (p1, p2) =>\n  Math.atan2(p2.y - p1.y, p2.x - p1.x) - OFFSET;\n\nexport const degrees = radians => (180 * (radians + OFFSET)) / Math.PI;\n\nexport const distance = (p1, p2) =>\n  Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y));\n\n// get a point along the line that forms between p1 and p2\n// howFar value between 0 and 1, how far along that line\nexport const pointOnLine = (p1, p2, howFar) => ({\n  x: p1.x + (p2.x - p1.x) * howFar,\n  y: p1.y + (p2.y - p1.y) * howFar\n});\n\nexport const pointOnEllipse = (ellipse, angleRadians) => ({\n  x:\n    ellipse.x +\n    ellipse.rx * Math.cos(angleRadians) * Math.cos(ellipse.rotation) -\n    ellipse.ry * Math.sin(angleRadians) * Math.sin(ellipse.rotation),\n  y:\n    ellipse.y +\n    ellipse.rx * Math.cos(angleRadians) * Math.sin(ellipse.rotation) +\n    ellipse.ry * Math.sin(angleRadians) * Math.cos(ellipse.rotation)\n});\n\nexport const isPointInsideEllipse = (ellipse, point) => {\n  const { rx: a, ry: b, x: x0, y: y0, rotation: alpha } = ellipse;\n  const { x: xp, y: yp } = point;\n  return (\n    Math.pow(Math.cos(alpha) * (xp - x0) + Math.sin(alpha) * (yp - y0), 2) /\n      (a * a) +\n      Math.pow(Math.sin(alpha) * (xp - x0) - Math.cos(alpha) * (yp - y0), 2) /\n        (b * b) <=\n    1\n  );\n};\n\nconst sign = (p1, p2, p3) =>\n  (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n\nexport const isPointInsideTriangle = (pt, v1, v2, v3) => {\n  const d1 = sign(pt, v1, v2);\n  const d2 = sign(pt, v2, v3);\n  const d3 = sign(pt, v3, v1);\n\n  const has_neg = d1 < 0 || d2 < 0 || d3 < 0;\n  const has_pos = d1 > 0 || d2 > 0 || d3 > 0;\n\n  return !(has_neg && has_pos);\n};\n\nexport const radians = degrees => (degrees * Math.PI) / 180 - OFFSET;\n\nexport const getCanvasDimensions = context => {\n  if (context) {\n    const { width, height } = context.canvas.getBoundingClientRect();\n    return { width, height };\n  }\n};\n","import * as d3 from 'd3';\n\nimport { distance, getCanvasDimensions } from 'utils';\nimport { showLEDs } from 'animations';\n\nexport const ripple = (context, strands) => {\n  const { width, height } = getCanvasDimensions(context);\n  const X = width / 2;\n  const Y = height / 2;\n  const RIPPLE_WIDTH = 50;\n  const LED_COLOR = 'white';\n  const RIPPLE_COLOR = 'gold';\n\n  const increaseRadius = d3\n    .scaleLinear()\n    .domain([0, RIPPLE_WIDTH])\n    .range([1, 5]);\n  const decreaseRadius = d3\n    .scaleLinear()\n    .domain([0, RIPPLE_WIDTH])\n    .range([5, 1]);\n  const increaseColor = d3\n    .scaleLinear()\n    .domain([0, RIPPLE_WIDTH])\n    .range([LED_COLOR, RIPPLE_COLOR]);\n  const decreaseColor = d3\n    .scaleLinear()\n    .domain([0, RIPPLE_WIDTH])\n    .range([RIPPLE_COLOR, LED_COLOR]);\n\n  const inRippleRange = (led, radius) => {\n    const d = distance(led, { x: X, y: Y });\n    return d < radius && d > radius - RIPPLE_WIDTH;\n  };\n\n  const prominence = (led, radius) => radius - distance(led, { x: X, y: Y });\n\n  const getRadius = prominence =>\n    prominence - RIPPLE_WIDTH / 2 < 0\n      ? increaseRadius(prominence)\n      : decreaseRadius(prominence);\n\n  const getColor = prominence =>\n    prominence - RIPPLE_WIDTH / 2 < 0\n      ? increaseColor(prominence)\n      : decreaseColor(prominence);\n\n  let leds = strands.flatMap(strand => strand);\n  let radius = 0;\n  const _ripple = () => {\n    leds = leds.map(led =>\n      inRippleRange(led, radius)\n        ? led\n            .color(getColor(prominence(led, radius)))\n            .radius(getRadius(prominence(led, radius)))\n        : led.color(LED_COLOR).radius(1)\n    );\n    showLEDs(context, leds);\n    radius = radius >= width * 0.75 ? 0 : radius + 5;\n    window.requestAnimationFrame(_ripple);\n  };\n\n  window.requestAnimationFrame(_ripple);\n};\n","import { getCanvasDimensions } from 'utils';\n\nexport const showLEDs = (context, leds) => {\n  const { width, height } = getCanvasDimensions(context);\n  context.clearRect(0, 0, width, height);\n  leds.forEach(led => led.draw(context));\n};\n\nexport const showStrands = (context, strands) => {\n  const { width, height } = getCanvasDimensions(context);\n  context.clearRect(0, 0, width, height);\n  showLEDs(\n    context,\n    strands.flatMap(strand => strand)\n  );\n};\n\nexport * from './fan';\nexport * from './ripple';\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { isEqual, reverse } from 'lodash';\n\nimport { ripple } from 'animations';\nimport { useCanvas } from 'hooks';\nimport {\n  angleBetween,\n  distance,\n  isPointInsideEllipse,\n  isPointInsideTriangle,\n  pointOnEllipse,\n  pointOnLine,\n  radians\n} from 'utils';\n\nconst WIDTH = 1100;\nconst HEIGHT = 900;\nconst RADIUS_X = 100;\nconst SAIL_COLOR = '#455B68';\nconst BACKGROUND_COLOR = 'black';\nconst LED_COLOR = 'white';\nconst LED_DENSITY = 165;\nconst NUM_STRANDS = 9;\n\nconst Canvas = styled.canvas`\n  background-color: ${BACKGROUND_COLOR};\n`;\n\nconst leftHemisphere = [radians(180), radians(360)];\nconst rightHemisphere = [radians(0), radians(180)];\nconst Ellipse = (\n  p1,\n  p2,\n  rx = RADIUS_X,\n  startAngle = radians(0),\n  endAngle = radians(360)\n) => {\n  const _ellipse = {\n    x: pointOnLine(p1, p2, 0.5).x,\n    y: pointOnLine(p1, p2, 0.5).y,\n    rx,\n    ry: distance(p1, p2) / 2,\n    rotation: angleBetween(p1, p2),\n    startAngle,\n    endAngle\n  };\n  return Object.freeze({\n    ..._ellipse,\n    draw: (context, strokeColor = 'black', fillColor) => {\n      const { x, y, rx, ry, rotation, startAngle, endAngle } = _ellipse;\n      context.beginPath();\n      context.ellipse(x, y, rx, ry, rotation, startAngle, endAngle);\n      context.strokeStyle = strokeColor;\n      context.stroke();\n      if (fillColor) {\n        context.fillStyle = fillColor;\n        context.fill();\n      }\n    },\n    pad: () => Ellipse(p1, p2, rx - 1, startAngle, endAngle)\n  });\n};\n\nconst LED = config => {\n  const defaults = {\n    color: LED_COLOR,\n    endAngle: 2 * Math.PI,\n    radius: 1,\n    startAngle: 0\n  };\n  const _led = { ...defaults, ...config };\n  return Object.freeze({\n    ..._led,\n    color: color => LED({ ..._led, color }),\n    r: _led.radius,\n    radius: radius => LED({ ..._led, radius }),\n    resetColor: () => LED({ ..._led, color: defaults.color }),\n    resetRadius: () => LED({ ..._led, radius: defaults.radius }),\n    draw: context => {\n      const { x, y, color, radius, startAngle, endAngle } = _led;\n      context.beginPath();\n      context.arc(x, y, radius, startAngle, endAngle);\n      context.fillStyle = color;\n      context.fill();\n    }\n  });\n};\n\nconst Sail = config => {\n  const { p1, p2, p3, rx, numStrands } = config;\n  const ellipses = d3.range(0, numStrands).map(i => {\n    const incAmount = rx / (numStrands - 1);\n    const pInc = pointOnLine(p3, p1, i / (numStrands - 1));\n    const newRx = rx - i * incAmount * 2;\n    const [startAngle, endAngle] =\n      newRx >= 0 ? rightHemisphere : leftHemisphere;\n    return Ellipse(pInc, p2, Math.abs(newRx), startAngle, endAngle);\n  });\n  const _sail = {\n    ...config,\n    e1: Ellipse(p1, p2, rx, radians(240), radians(360)),\n    e2: Ellipse(p2, p3, rx, radians(180), radians(300)),\n    e3: Ellipse(p3, p1, rx, radians(180), radians(360)),\n    ellipses\n  };\n  return Object.freeze({\n    ..._sail,\n    setNumStrands: numStrands => Sail({ ..._sail, numStrands }),\n    getLEDs: () =>\n      ellipses\n        .map(e => {\n          const angleStep = (e.endAngle - e.startAngle) / LED_DENSITY;\n          const leds = d3\n            .range(e.startAngle, e.endAngle, angleStep)\n            .map(angle => LED(pointOnEllipse(e, angle)))\n            .filter(\n              led =>\n                isPointInsideTriangle(led, p1, p2, p3) &&\n                [_sail.e1.pad(), _sail.e2.pad(), _sail.e3].every(\n                  e => !isPointInsideEllipse(e, led)\n                )\n            );\n          return isEqual([e.startAngle, e.endAngle], rightHemisphere)\n            ? reverse(leds)\n            : leds;\n        })\n        .filter(ledStrand => ledStrand.length > 0),\n    draw: context => {\n      context.beginPath();\n      context.moveTo(p1.x, p1.y);\n      context.lineTo(WIDTH / 2, WIDTH / 2);\n      context.lineTo(p3.x, p3.y);\n      context.fillStyle = SAIL_COLOR;\n      context.fill();\n      [_sail.e1, _sail.e2, _sail.e3].forEach(e => {\n        e.draw(context, BACKGROUND_COLOR, BACKGROUND_COLOR);\n      });\n    }\n  });\n};\n\nconst SAILS = [\n  {\n    p1: { x: 300, y: -100 },\n    p2: { x: 750, y: 750 },\n    p3: { x: -100, y: 300 },\n    rx: RADIUS_X\n  },\n  {\n    p1: { x: WIDTH + 100, y: 300 },\n    p2: { x: WIDTH - 750, y: 750 },\n    p3: { x: WIDTH - 300, y: -100 },\n    rx: RADIUS_X\n  },\n  {\n    p1: { x: -60, y: 300 },\n    p2: { x: 880, y: 550 },\n    p3: { x: -60, y: 800 },\n    rx: RADIUS_X\n  },\n  {\n    p1: { x: WIDTH + 60, y: 800 },\n    p2: { x: WIDTH - 880, y: 550 },\n    p3: { x: WIDTH + 60, y: 300 },\n    rx: RADIUS_X\n  }\n].map(s => Sail(s).setNumStrands(NUM_STRANDS));\n\nconst SAIL_STRANDS = SAILS.map(sail => sail.getLEDs().map(leds => leds));\nconst STRANDS = SAIL_STRANDS.flatMap(sailStrand => sailStrand);\n\nconst Prototype = () => {\n  const [canvasRef, context] = useCanvas();\n\n  useEffect(() => {\n    if (context) {\n      //SAILS.forEach(sail => sail.draw(context));\n      ripple(context, STRANDS);\n    }\n  }, [context]);\n\n  return <Canvas ref={canvasRef} width={WIDTH} height={HEIGHT} />;\n};\n\nexport default Prototype;\n","import { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { debounce } from 'lodash';\n\nexport const useWindowSize = (defaultSize = [0, 0]) => {\n  const [size, setSize] = useState(defaultSize);\n\n  useLayoutEffect(() => {\n    const updateSize = () => setSize([window.innerWidth, window.innerHeight]);\n    window.addEventListener('resize', debounce(updateSize, 300));\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  return size;\n};\n\nexport const useCanvas = () => {\n  const canvasRef = useRef(null);\n  const [context, setContext] = useState();\n\n  useEffect(() => {\n    const node = canvasRef.current;\n    if (node) {\n      setContext(node.getContext('2d'));\n    }\n  }, [canvasRef]);\n\n  return [canvasRef, context];\n};\n","import Prototype from 'components/Prototype';\n\nconst App = () => <Prototype />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}